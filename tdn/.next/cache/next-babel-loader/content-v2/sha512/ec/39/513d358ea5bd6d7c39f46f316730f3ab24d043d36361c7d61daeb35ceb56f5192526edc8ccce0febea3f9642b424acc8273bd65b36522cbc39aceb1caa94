{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/encora/Documents/projects/testDrive/tdn/components/confirm-test-drive/confirmTestDrive.js\";\n\n/** @format */\nimport btnStyles from \"./../../styles/Btn.module.css\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useState, useEffect } from \"react\";\nimport { useUserData } from \"../../contexts/UserDataContext\";\nimport FontAwesome from \"react-fontawesome\";\nimport { InlineWidget } from \"react-calendly\";\n\nconst ConfirmTestDrive = props => {\n  const data = useUserData();\n  const {\n    0: calendlyButtonDisable,\n    1: setCalendlyButtonDisable\n  } = useState(false);\n  const {\n    0: disCal,\n    1: setDisplayCalendly\n  } = useState(false);\n  const {\n    0: calendlyPrefill,\n    1: setCalendlyPrefill\n  } = useState({\n    email: data && data.userData && data.userData.email,\n    firstName: data && data.userData && data.userData.firstName,\n    lastName: data && data.userData && data.userData.lastName,\n    location: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Name,\n    customAnswers: {\n      a2: data && data.userData && data.userData.phone\n    }\n  });\n  const {\n    0: utmPrefill,\n    1: setUtmPrefill\n  } = useState({\n    utmCampaign: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Email,\n    utmContent: \"\",\n    utmMedium: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Phone,\n    utmSource: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Address,\n    utmTerm: \"Spring\"\n  });\n\n  const sendTextMessage = userData => {\n    const textMessageData = {\n      firstName: userData.fields.FirstName,\n      lastName: userData.fields.LastName,\n      date: userData.fields.Date,\n      phone: userData.fields.Phone\n    };\n    Axios.post(\"/api/sendTextMessage\", textMessageData).then(res => {\n      console.log(\"sent text message \", res.data);\n      localStorage.clear();\n    }).catch(err => {\n      console.log(err);\n      localStorage.clear();\n    });\n  };\n\n  const sendConfirmationMessage = async userId => {\n    let userData;\n\n    try {\n      userData = await Axios.get(`/api/user/get-user/${userId}`);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (userData.data && userData.data.fields && userData.data.fields.CommunicationMethod === \"Text\") {\n      sendTextMessage(userData.data);\n    } else {\n      localStorage.clear();\n    }\n  };\n\n  const getPrefillData = async (userId = localStorage.getItem(\"userId\")) => {\n    setCalendlyButtonDisable(true);\n    let userData;\n\n    try {\n      userData = await Axios.get(`/api/user/get-user/${userId}`);\n      const rooftopData = await Axios.get(`/api/get-rooftop/${props.rt}`);\n      const carData = await Axios.get(`/api/get-car/${localStorage.getItem(\"carId\")}`);\n      const dealerData = await Axios.get(`/api/get-dealership/${rooftopData.data.fields[\"Dealership Group\"][0]}`);\n      const driveForm = localStorage.getItem(\"driveForm\");\n      let dupDriveForm = JSON.parse(driveForm);\n      console.log(\"userData>>>>>>>>>>>\", moment(userData.data.fields.Date).tz(dupDriveForm.timeZone).valueOf(), new Date(userData.data.fields.Date).getTime() / 1000);\n      let postData = {\n        \"title\": \"Test Meeting 2\",\n        \"location\": rooftopData.data.fields.Address,\n        \"notify_participants\": true,\n        \"calendar_id\": \"2chz4enym2c851mxo6bf8ocxm\",\n        \"busy\": true,\n        \"read_only\": false,\n        \"participants\": [{\n          \"name\": userData.data.fields.FirstName,\n          \"email\": userData.data.fields.Email\n        }],\n        \"description\": \"Lets Meet\",\n        \"when\": {\n          \"start_time\": \"1618217422\",\n          \"end_time\": \"1618217722\"\n        }\n      }; // Axios.post('https://api.nylas.com/events', postData, {\n      //   headers: {\n      //     \"Authorization\": \"Bearer tS0X4TV2iUM9ZSaAQaLU8NBc6YwbD9\",\n      //     \"Content-Type\": \"application/json\"\n      //   }\n      // }).then(res => {\n      //   props.setThisPage(8);\n      //   props.nextStep();\n      // })\n      // setCalendlyPrefill({\n      //   email: userData.data.fields.Email,\n      //   firstName: userData.data.fields.FirstName,\n      //   lastName: userData.data.fields.LastName,\n      //   location:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Name,\n      //   // phone: +17002291519,\n      //   customAnswers: {\n      //     a2: userData.data.fields.Phone,\n      //     a1: 11,\n      //     a3:\n      //       dealerData.data &&\n      //       dealerData.data.fields &&\n      //       dealerData.data.fields.Name,\n      //     a4: carData.data && carData.data.fields && carData.data.fields.Name,\n      //     a5: 55,\n      //     a6: 66,\n      //     a7: 77,\n      //     a8: 88,\n      //     a9: 99,\n      //     a10: \"this text should not be here.\",\n      //   },\n      // });\n      // setUtmPrefill({\n      //   utmCampaign:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Email,\n      //   utmContent: \"\",\n      //   utmMedium:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Phone,\n      //   utmSource:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Address,\n      //   utmTerm: \"\",\n      // });\n      // setDisplayCalendly(true);\n\n      setCalendlyButtonDisable(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState(\"\");\n  const {\n    0: selectedTime,\n    1: setSelectedTime\n  } = useState(\"\");\n  useEffect(() => {\n    function isCalendlyEvent(e) {\n      return e.data.event && e.data.event.indexOf(\"calendly\") === 0;\n    }\n\n    window.addEventListener(\"message\", function (e) {\n      if (isCalendlyEvent(e)) {\n        if (e.data.event === \"calendly.event_scheduled\") {\n          sendConfirmationMessage(localStorage.getItem(\"userId\"));\n          setDisplayCalendly(false);\n          props.setThisPage(8);\n          props.nextStep();\n        }\n      }\n    });\n  }, []);\n  const base = \"https://calendly.com/dev-124/test-drive/\";\n  const {\n    0: calendlyUrl,\n    1: setCalendlyUrl\n  } = useState(\"\");\n  useEffect(() => {\n    const driveForm = localStorage.getItem(\"driveForm\");\n    let dupDriveForm = JSON.parse(driveForm);\n\n    if (dupDriveForm) {\n      const month = moment(props.selectedDateTime).tz(dupDriveForm.timeZone).format(\"YYYY-MM\");\n      const date = moment(props.selectedDateTime).tz(dupDriveForm.timeZone).format(\"YYYY-MM-DD\");\n      setCalendlyUrl(`${base}${props.selectedDateTime}?timezone=${dupDriveForm.timeZone}&month=${month}&date=${date}`);\n    }\n  }, [props.selectedDateTime]);\n  useEffect(() => {\n    const driveForm = localStorage.getItem(\"driveForm\");\n    let dupDriveForm = JSON.parse(driveForm);\n\n    if (dupDriveForm) {\n      let timeSlot = moment(props.selectedDateTime).tz(dupDriveForm.timeZone).format(\"LT\");\n      let date = moment(props.selectedDateTime).format(\"dddd, MMMM DD\");\n\n      if (date) {\n        setSelectedDate(date);\n      }\n\n      if (timeSlot) {\n        setSelectedTime(timeSlot);\n      }\n    }\n  }, [props.isActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `${props.currentPage === 7 ? \"block\" : \"none\"}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bggray d-flex justify-content-center height100vh overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bgwhite centerDiv1\",\n        children: disCal === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dFlex justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setDisplayCalendly(false),\n            children: /*#__PURE__*/_jsxDEV(FontAwesome, {\n              className: \"d-flex justify-content-center\",\n              name: \"fas fa-arrow-left\",\n              style: {\n                padding: \"0px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InlineWidget, {\n            url: calendlyUrl,\n            pageSettings: {\n              backgroundColor: \"ffffff\",\n              hideEventTypeDetails: true,\n              hideLandingPageDetails: true\n            },\n            prefill: calendlyPrefill,\n            pageSettings: true,\n            utm: utmPrefill,\n            styles: {\n              height: \"1300px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"confirm-heading\",\n            children: \"Confirm your Test Drive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12 col-md-6 col-lg-6 displaynone\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  className: \"confirmMap\",\n                  src: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Geolocation,\n                  width: \"600\",\n                  height: \"420\",\n                  frameBorder: \"0\",\n                  allowFullScreen: \"\",\n                  \"aria-hidden\": \"false\",\n                  tabIndex: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12 col-md-6 col-lg-6 ipadView\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confirmCar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    borderRadius: \"20px\"\n                  },\n                  src: props.selectedCarData && props.selectedCarData.fields && props.selectedCarData.fields.Image[0].url,\n                  alt: \"\",\n                  width: \"100%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mapAddress\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: props.rooftopData && props.rooftopData.fields && props.rooftopData.fields.Address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confirmDate\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"monthandDateContent\",\n                  children: [\" \", selectedDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timeVIewContainer\",\n                  children: selectedTime ? selectedTime.toLowerCase() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnSecconfirm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flexBt\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: btnStyles.secondary,\n                onClick: () => {\n                  props.setImageFile2(null);\n                  props.setImageFile1(null);\n                  props.setThisPage(3);\n                  props.setSomethingWrong(false);\n                  props.goToStep(3);\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: btnStyles.primary,\n                onClick: () => getPrefillData(),\n                disabled: calendlyButtonDisable,\n                children: calendlyButtonDisable ? /*#__PURE__*/_jsxDEV(FontAwesome, {\n                  name: \"fas fa-spinner fa-pulse\",\n                  spin: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this) : \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ConfirmTestDrive;","map":{"version":3,"sources":["/home/encora/Documents/projects/testDrive/tdn/components/confirm-test-drive/confirmTestDrive.js"],"names":["btnStyles","Axios","moment","React","useState","useEffect","useUserData","FontAwesome","InlineWidget","ConfirmTestDrive","props","data","calendlyButtonDisable","setCalendlyButtonDisable","disCal","setDisplayCalendly","calendlyPrefill","setCalendlyPrefill","email","userData","firstName","lastName","location","rooftopData","fields","Name","customAnswers","a2","phone","utmPrefill","setUtmPrefill","utmCampaign","Email","utmContent","utmMedium","Phone","utmSource","Address","utmTerm","sendTextMessage","textMessageData","FirstName","LastName","date","Date","post","then","res","console","log","localStorage","clear","catch","err","sendConfirmationMessage","userId","get","CommunicationMethod","getPrefillData","getItem","rt","carData","dealerData","driveForm","dupDriveForm","JSON","parse","tz","timeZone","valueOf","getTime","postData","selectedDate","setSelectedDate","selectedTime","setSelectedTime","isCalendlyEvent","e","event","indexOf","window","addEventListener","setThisPage","nextStep","base","calendlyUrl","setCalendlyUrl","month","selectedDateTime","format","timeSlot","isActive","display","currentPage","padding","backgroundColor","hideEventTypeDetails","hideLandingPageDetails","height","Geolocation","borderRadius","selectedCarData","Image","url","toLowerCase","secondary","setImageFile2","setImageFile1","setSomethingWrong","goToStep","primary"],"mappings":"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","sourcesContent":["/** @format */\nimport btnStyles from \"./../../styles/Btn.module.css\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useState, useEffect } from \"react\";\nimport { useUserData } from \"../../contexts/UserDataContext\";\n\nimport FontAwesome from \"react-fontawesome\";\n\nimport { InlineWidget } from \"react-calendly\";\n\nconst ConfirmTestDrive = (props) => {\n  const data = useUserData();\n\n  const [calendlyButtonDisable, setCalendlyButtonDisable] = useState(false);\n  const [disCal, setDisplayCalendly] = useState(false);\n  const [calendlyPrefill, setCalendlyPrefill] = useState({\n    email: data && data.userData && data.userData.email,\n    firstName: data && data.userData && data.userData.firstName,\n    lastName: data && data.userData && data.userData.lastName,\n    location:\n      props.rooftopData &&\n      props.rooftopData.fields &&\n      props.rooftopData.fields.Name,\n    customAnswers: {\n      a2: data && data.userData && data.userData.phone,\n    },\n  });\n  const [utmPrefill, setUtmPrefill] = useState({\n    utmCampaign:\n      props.rooftopData &&\n      props.rooftopData.fields &&\n      props.rooftopData.fields.Email,\n    utmContent: \"\",\n    utmMedium:\n      props.rooftopData &&\n      props.rooftopData.fields &&\n      props.rooftopData.fields.Phone,\n    utmSource:\n      props.rooftopData &&\n      props.rooftopData.fields &&\n      props.rooftopData.fields.Address,\n    utmTerm: \"Spring\",\n  });\n\n  const sendTextMessage = (userData) => {\n    const textMessageData = {\n      firstName: userData.fields.FirstName,\n      lastName: userData.fields.LastName,\n      date: userData.fields.Date,\n      phone: userData.fields.Phone,\n    };\n    Axios.post(\"/api/sendTextMessage\", textMessageData)\n      .then((res) => {\n        console.log(\"sent text message \", res.data);\n        localStorage.clear();\n      })\n      .catch((err) => {\n        console.log(err);\n        localStorage.clear();\n      });\n  };\n\n  const sendConfirmationMessage = async (userId) => {\n    let userData;\n    try {\n      userData = await Axios.get(`/api/user/get-user/${userId}`);\n    } catch (err) {\n      console.log(err);\n    }\n    if (\n      userData.data &&\n      userData.data.fields &&\n      userData.data.fields.CommunicationMethod === \"Text\"\n    ) {\n      sendTextMessage(userData.data);\n    } else {\n      localStorage.clear();\n    }\n  };\n  const getPrefillData = async (userId = localStorage.getItem(\"userId\")) => {\n    setCalendlyButtonDisable(true);\n    let userData;\n    try {\n      userData = await Axios.get(`/api/user/get-user/${userId}`);\n      const rooftopData = await Axios.get(`/api/get-rooftop/${props.rt}`);\n      const carData = await Axios.get(\n        `/api/get-car/${localStorage.getItem(\"carId\")}`\n      );\n      const dealerData = await Axios.get(\n        `/api/get-dealership/${rooftopData.data.fields[\"Dealership Group\"][0]}`\n      );\n      const driveForm = localStorage.getItem(\"driveForm\");\n    let dupDriveForm = JSON.parse(driveForm);\n      console.log(\"userData>>>>>>>>>>>\", moment(userData.data.fields.Date).tz(dupDriveForm.timeZone).valueOf(), new Date(userData.data.fields.Date).getTime() / 1000);\n      let postData = {\n        \"title\": \"Test Meeting 2\",\n        \"location\": rooftopData.data.fields.Address,\n        \"notify_participants\": true,\n        \"calendar_id\": \"2chz4enym2c851mxo6bf8ocxm\",\n        \"busy\": true,\n        \"read_only\": false,\n        \"participants\": [\n          {\n            \"name\": userData.data.fields.FirstName,\n            \"email\": userData.data.fields.Email\n          }\n        ],\n        \"description\": \"Lets Meet\",\n        \"when\": {\n          \"start_time\": \"1618217422\",\n          \"end_time\": \"1618217722\"\n        }\n      }\n      // Axios.post('https://api.nylas.com/events', postData, {\n      //   headers: {\n      //     \"Authorization\": \"Bearer tS0X4TV2iUM9ZSaAQaLU8NBc6YwbD9\",\n      //     \"Content-Type\": \"application/json\"\n      //   }\n      // }).then(res => {\n      //   props.setThisPage(8);\n      //   props.nextStep();\n      // })\n\n      // setCalendlyPrefill({\n      //   email: userData.data.fields.Email,\n      //   firstName: userData.data.fields.FirstName,\n      //   lastName: userData.data.fields.LastName,\n      //   location:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Name,\n      //   // phone: +17002291519,\n      //   customAnswers: {\n      //     a2: userData.data.fields.Phone,\n      //     a1: 11,\n      //     a3:\n      //       dealerData.data &&\n      //       dealerData.data.fields &&\n      //       dealerData.data.fields.Name,\n      //     a4: carData.data && carData.data.fields && carData.data.fields.Name,\n      //     a5: 55,\n      //     a6: 66,\n      //     a7: 77,\n      //     a8: 88,\n      //     a9: 99,\n      //     a10: \"this text should not be here.\",\n      //   },\n      // });\n      // setUtmPrefill({\n      //   utmCampaign:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Email,\n      //   utmContent: \"\",\n      //   utmMedium:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Phone,\n      //   utmSource:\n      //     rooftopData.data &&\n      //     rooftopData.data.fields &&\n      //     rooftopData.data.fields.Address,\n      //   utmTerm: \"\",\n      // });\n      // setDisplayCalendly(true);\n      setCalendlyButtonDisable(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedTime, setSelectedTime] = useState(\"\");\n\n  useEffect(() => {\n    function isCalendlyEvent(e) {\n      return e.data.event && e.data.event.indexOf(\"calendly\") === 0;\n    }\n    window.addEventListener(\"message\", function (e) {\n      if (isCalendlyEvent(e)) {\n        if (e.data.event === \"calendly.event_scheduled\") {\n          sendConfirmationMessage(localStorage.getItem(\"userId\"));\n          setDisplayCalendly(false);\n          props.setThisPage(8);\n          props.nextStep();\n        }\n      }\n    });\n  }, []);\n  const base = \"https://calendly.com/dev-124/test-drive/\";\n  const [calendlyUrl, setCalendlyUrl] = useState(\"\");\n\n  useEffect(() => {\n    const driveForm = localStorage.getItem(\"driveForm\");\n    let dupDriveForm = JSON.parse(driveForm);\n    if (dupDriveForm) {\n      const month = moment(props.selectedDateTime)\n        .tz(dupDriveForm.timeZone)\n        .format(\"YYYY-MM\");\n      const date = moment(props.selectedDateTime)\n        .tz(dupDriveForm.timeZone)\n        .format(\"YYYY-MM-DD\");\n      setCalendlyUrl(\n        `${base}${props.selectedDateTime}?timezone=${dupDriveForm.timeZone}&month=${month}&date=${date}`\n      );\n    }\n  }, [props.selectedDateTime]);\n\n  useEffect(() => {\n    const driveForm = localStorage.getItem(\"driveForm\");\n    let dupDriveForm = JSON.parse(driveForm);\n    if (dupDriveForm) {\n      let timeSlot = moment(props.selectedDateTime)\n        .tz(dupDriveForm.timeZone)\n        .format(\"LT\");\n      let date = moment(props.selectedDateTime).format(\"dddd, MMMM DD\");\n      if (date) {\n        setSelectedDate(date);\n      }\n      if (timeSlot) {\n        setSelectedTime(timeSlot);\n      }\n    }\n  }, [props.isActive]);\n\n  return (\n    <div style={{ display: `${props.currentPage === 7 ? \"block\" : \"none\"}` }}>\n      <div className=\"container-fluid bggray d-flex justify-content-center height100vh overflow-auto\">\n        <div className=\"bgwhite centerDiv1\">\n          {disCal === true ? (\n            <div className=\"dFlex justify-content-center\">\n              <button\n                className=\"close-button\"\n                onClick={() => setDisplayCalendly(false)}\n              >\n                {/* <span className=\"icon\">&times;</span> */}\n                {/* <span className=\"icon\">&#129040;</span> */}\n                <FontAwesome\n                  className=\"d-flex justify-content-center\"\n                  name=\"fas fa-arrow-left\"\n                  style={{ padding: \"0px\" }}\n                />\n              </button>\n              <InlineWidget\n                url={calendlyUrl}\n                pageSettings={{\n                  backgroundColor: \"ffffff\",\n                  hideEventTypeDetails: true,\n                  hideLandingPageDetails: true,\n                }}\n                prefill={calendlyPrefill}\n                pageSettings\n                utm={utmPrefill}\n                styles={{\n                  height: \"1300px\",\n                }}\n              />\n            </div>\n          ) : (\n            <div>\n              <h1 className=\"confirm-heading\">Confirm your Test Drive</h1>\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-md-6 col-lg-6 displaynone\">\n                  <div>\n                    <iframe\n                      className=\"confirmMap\"\n                      src={\n                        props.rooftopData &&\n                        props.rooftopData.fields &&\n                        props.rooftopData.fields.Geolocation\n                      }\n                      width=\"600\"\n                      height=\"420\"\n                      frameBorder=\"0\"\n                      allowFullScreen=\"\"\n                      aria-hidden=\"false\"\n                      tabIndex=\"0\"\n                    ></iframe>\n                  </div>\n\n                  {/* <div className=\"infoText\">\n              <p>*you can change your appointment time if needed</p>\n            </div> */}\n                </div>\n                <div className=\"col-sm-12 col-md-6 col-lg-6 ipadView\">\n                  <div className=\"confirmCar\">\n                    <img\n                      style={{ borderRadius: \"20px\" }}\n                      src={\n                        props.selectedCarData &&\n                        props.selectedCarData.fields &&\n                        props.selectedCarData.fields.Image[0].url\n                      }\n                      alt=\"\"\n                      width=\"100%\"\n                    />\n                  </div>\n                  <div className=\"mapAddress\">\n                    <p>\n                      {props.rooftopData &&\n                        props.rooftopData.fields &&\n                        props.rooftopData.fields.Name}\n                    </p>\n                    <p>\n                      {props.rooftopData &&\n                        props.rooftopData.fields &&\n                        props.rooftopData.fields.Address}\n                    </p>\n                  </div>\n                  <div className=\"confirmDate\">\n                    <div className=\"monthandDateContent\"> {selectedDate}</div>\n                    <div className=\"timeVIewContainer\">\n                      {selectedTime ? selectedTime.toLowerCase() : null}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"btnSecconfirm\">\n                <div className=\"flexBt\">\n                  <button\n                    type=\"button\"\n                    className={btnStyles.secondary}\n                    onClick={() => {\n                      props.setImageFile2(null);\n                      props.setImageFile1(null);\n                      props.setThisPage(3);\n                      props.setSomethingWrong(false);\n\n                      props.goToStep(3);\n                    }}\n                  >\n                    Back\n                  </button>\n                  <button\n                    type=\"button\"\n                    className={btnStyles.primary}\n                    onClick={() => getPrefillData()}\n                    disabled={calendlyButtonDisable}\n                  >\n                    {calendlyButtonDisable ? (\n                      <FontAwesome name=\"fas fa-spinner fa-pulse\" spin />\n                    ) : (\n                      \"Continue\"\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmTestDrive;\n"]},"metadata":{},"sourceType":"module"}