{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/encora/Documents/projects/testDrive/tdn/components/pick-date-time/pickDateTime.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @format */\nimport btnStyles from './../../styles/Btn.module.css';\nimport React, { useState, useEffect } from 'react';\nimport SechduleContent from './../../common-component/sechduleDesc';\nimport { InlineWidget } from 'react-calendly';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'; // requires a loader\n\nimport { Carousel } from 'react-responsive-carousel';\nimport { useCarData, useUpdateCarData } from './../../contexts/CarDataContext';\nimport styles from '../../styles/Home.module.css';\nimport StepBarV1 from './../../components/step-bar/stepBarV1';\nimport StepbarV1Style from './../../styles/StepBarV1.module.css';\nimport Axios from 'axios';\nimport Calendar from 'react-calendar';\nimport moment from 'moment-timezone';\nimport Dropdown from './dropDown';\nimport StepBar from './../../components/step-bar/stepBar';\nimport { useUpdatedDateTimeData } from '../../contexts/DateTimeDataContext'; // import StepBarV1 from \"./../../components/step-bar/stepBarV1\";\n\nexport default function pickDateTime(props) {\n  const {\n    0: carData,\n    1: setCarData\n  } = useState(null);\n  const {\n    0: selectedDate,\n    1: onChange\n  } = useState(new Date());\n  const {\n    0: time,\n    1: setTime\n  } = useState(props.selectedDateTime);\n  const {\n    0: calenderData,\n    1: setCalenderData\n  } = useState();\n  const {\n    0: brand,\n    1: setBrand\n  } = useState('');\n  const {\n    0: btnDisabled,\n    1: setBtnDisabled\n  } = useState(false);\n  const {\n    0: timeZone,\n    1: setTimeZone\n  } = useState('America/New_York');\n  const {\n    0: loadingSlots,\n    1: setLoading\n  } = useState(false);\n  console.log('selected car data ', props.selectedCarData);\n  const timeZones = [{\n    title: 'Eastern Time - US & Canada ',\n    value: 'America/New_York'\n  }, {\n    title: 'Central Time - US & Canada ',\n    value: 'America/Chicago'\n  }, {\n    title: 'Mountain Time - US & Canada ',\n    value: 'America/Denver'\n  }, {\n    title: 'Pacific Time - US & Canada ',\n    value: 'America/Los_Angeles'\n  }];\n  const data = useUpdatedDateTimeData();\n\n  const setDateTime = e => {\n    e.preventDefault();\n    const driveForm = localStorage.getItem('driveForm');\n    let dupDriveForm = JSON.parse(driveForm);\n    Axios.post('/api/user/updateDate', {\n      UserID: localStorage.getItem('userId'),\n      Date: time\n    }).then(res => {\n      if (res.data) {\n        let obj = _objectSpread(_objectSpread({}, dupDriveForm), {}, {\n          time,\n          timeZone\n        });\n\n        localStorage.setItem('driveForm', JSON.stringify(obj));\n        setBtnDisabled(false);\n        props.setNextPage();\n        props.nextStep();\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    if (props.onReload) {\n      const driveForm = localStorage.getItem('driveForm');\n\n      if (driveForm) {\n        let obj = JSON.parse(driveForm);\n\n        if (obj.timeZone) {\n          setTimeZone(obj.timeZone);\n        }\n\n        if (obj.time) {\n          let selectedTime = obj.time;\n          console.log(props.selectedDateTime);\n\n          if (moment(selectedTime).isBefore(moment(new Date()))) {\n            onChange(new Date());\n          } else {\n            onChange(new Date(selectedTime));\n            setTime(selectedTime);\n          }\n        }\n      }\n    }\n\n    if (props.selectedCarData) {\n      setCarData(props.selectedCarData);\n    }\n  }, [props.onReload, props.selectedCarData]);\n  useEffect(() => {\n    props.setSelectedDateTime(time);\n  }, [time]);\n  const settings = {\n    showIndicators: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    showArrows: false,\n    showStatus: false,\n    legend: false,\n    autoPlay: false,\n    interval: '5000',\n    infiniteLoop: true,\n    transitionTime: '1000'\n  };\n\n  const getAvailableSlot = date => {\n    setLoading(true);\n    let firstDay = moment(date).startOf('month').format('YYYY-MM-DD');\n    let lastDay = moment(date).endOf('month').format('YYYY-MM-DD');\n    Axios.get(`/api/getCalendarEvents`, {\n      params: {\n        firstDay,\n        lastDay,\n        timezone: timeZone\n      }\n    }).then(response => {\n      setCalenderData(response.data);\n      setLoading(false);\n    }, error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    if (props.isActive === true) {\n      getAvailableSlot(new Date());\n    }\n  }, [props.isActive]);\n  useEffect(() => {\n    props.scrollToTop();\n  }, [props.isActive]);\n  useEffect(() => {\n    let brandName = '';\n    console.log('fetching brnds');\n\n    if (props.isActive === true && props.selectedCarData && props.selectedCarData.fields) {\n      Axios.get(`/api/get-brand/${props.selectedCarData.fields.Brand[0]}`).then(response => {\n        brandName = response.data.fields.Name;\n        setBrand(brandName);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    setCarData(props.selectedCarData);\n  }, [props.isActive, props.onReload, props.selectedCarData]);\n\n  const renderImages = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: `${props.currentPage === 2 ? 'block' : 'none'}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carSlidercss\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pickcar\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I want to drive a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Carousel, _objectSpread(_objectSpread({}, settings), {}, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: carData && carData.fields ? carData.fields.Image[0].thumbnails.large.url : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"legend\",\n              children: carData && carData.fields && carData.fields.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: carData && carData.fields ? carData.fields.Image[0].thumbnails.large.url : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"legend\",\n              children: carData && carData.fields && carData.fields.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: carData && carData.fields ? carData.fields.Image[0].thumbnails.large.url : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"legend\",\n              children: carData && carData.fields && carData.fields.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n\n  let totalSlots = calenderData && calenderData.filter(i => i.date === moment(selectedDate).format('YYYY-MM-DD'));\n  let availableSlots = totalSlots && totalSlots[0] && totalSlots[0].spots.filter(i => i.status === 'available');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `${props.currentPage === 2 ? 'block' : 'none'}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid height100vh\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hideContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-7 col-lg-7  min-width-desktop\",\n            children: [/*#__PURE__*/_jsxDEV(SechduleContent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.progressContent} marTopBot20`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: StepbarV1Style.hideForMobile,\n                children: /*#__PURE__*/_jsxDEV(StepBarV1, _objectSpread({}, props), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pickContent\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12 col-md-8 col-lg-8\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: \"Select a Date & Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Calendar, {\n                        minDate: new Date(),\n                        maxDate: new Date(moment().add(59, 'days')),\n                        onChange: onChange,\n                        value: selectedDate,\n                        className: \"manualReactCalendar\",\n                        next2Label: null,\n                        prev2Label: null,\n                        calendarType: \"US\",\n                        onActiveStartDateChange: ({\n                          activeStartDate,\n                          value,\n                          view\n                        }) => getAvailableSlot(activeStartDate)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12 col-md-4 col-lg-4 pl-0 pr-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timeZoneslct\",\n                      children: timeZone && /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [timeZones.find((x, i) => x.value === timeZone).title, ' ', \"(\", moment().tz(timeZone).format('LT').toLowerCase(), \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timechoose\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: moment(selectedDate).format('dddd, MMMM DD')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 25\n                      }, this), loadingSlots && !availableSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"loaderContent\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"loader\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 27\n                      }, this), availableSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"slots\",\n                        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: (availableSlots || []).map((i, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            className: i.start_time === time ? 'selectedTimeContainer' : 'timeContainer',\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontSize: '12px'\n                              },\n                              className: 'chooseTimeElement',\n                              children: moment(i.start_time).tz(timeZone).format('LT')\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 359,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontSize: '12px'\n                              },\n                              className: i.start_time === time ? 'selected-time' : 'chooseTime',\n                              onClick: () => {\n                                setTime(i.start_time);\n                                data(i.start_time);\n                              },\n                              children: i.start_time === time ? 'Selected' : 'Choose'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 368,\n                              columnNumber: 35\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 351,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 27\n                      }, this), !availableSlots && !loadingSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center no-time-slot\",\n                        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                          children: [\"No times available\", ' ', moment(selectedDate).format('MMMM DD')]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 391,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 395,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Please select another date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 396,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" mt-3 relativepos\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.btnSec,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: btnStyles.secondary,\n                  onClick: () => {\n                    props.setPreviousPage();\n                    props.previousStep();\n                  },\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: time !== '' ? btnStyles.primary : btnStyles.primaryDisabled,\n                  onClick: e => {\n                    setBtnDisabled(true);\n                    setDateTime(e);\n                  },\n                  disabled: time === '' || btnDisabled,\n                  children: \"Continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hideForMobile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-5 col-lg-5 min-width-desktop\",\n            children: [/*#__PURE__*/_jsxDEV(SechduleContent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.progressContent} marTopBot20`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: StepbarV1Style.hideForLaptop,\n                children: /*#__PURE__*/_jsxDEV(StepBarV1, _objectSpread({\n                  mobile: true\n                }, props), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: carData && carData.fields && renderImages()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pickcardesc\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: brand ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [brand, ` `, carData && carData.fields ? carData.fields.Name : 'sample car name']\n                }, void 0, true) : 'Loading . . .'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12 col-md-7 col-lg-7 min-width-desktop\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marTopBot20\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pickContent\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12 col-md-6 col-lg-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: \"Select a Date & Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12 col-md-6 col-lg-6 pl-0 pr-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timeZoneslct\",\n                      children: timeZone && /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [timeZones.find((x, i) => x.value === timeZone).title, ' ', \"(\", moment().tz(timeZone).format('LT').toLowerCase(), \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12 col-md-8 col-lg-8\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Calendar, {\n                        minDate: new Date(),\n                        maxDate: new Date(moment().add(59, 'days')),\n                        onChange: onChange,\n                        value: selectedDate,\n                        className: \"manualReactCalendar\",\n                        next2Label: null,\n                        prev2Label: null,\n                        calendarType: \"US\",\n                        onActiveStartDateChange: ({\n                          activeStartDate,\n                          value,\n                          view\n                        }) => getAvailableSlot(activeStartDate)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-12 col-md-4 col-lg-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timechoose\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: moment(selectedDate).format('dddd, MMMM DD')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 25\n                      }, this), loadingSlots && !availableSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"loaderContent\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"loader\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 566,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 27\n                      }, this), availableSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"slots\",\n                        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: (availableSlots || []).map((i, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            className: i.start_time === time ? 'selectedTimeContainer' : 'timeContainer',\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: 'chooseTimeElement',\n                              children: moment(i.start_time).tz(timeZone).format('LT')\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 581,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: i.start_time === time ? 'selected-time' : 'chooseTime',\n                              onClick: () => setTime(i.start_time),\n                              children: i.start_time === time ? 'Selected' : 'Choose'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 587,\n                              columnNumber: 35\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 573,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 571,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 27\n                      }, this), !availableSlots && !loadingSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center no-time-slot\",\n                        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                          children: [\"No times available\", ' ', moment(selectedDate).format('MMMM DD')]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 606,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 610,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Please select another date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 611,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 605,\n                        columnNumber: 27\n                      }, this), data && time ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          height: '75px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 615,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: time ? 'fixedPos' : 'relativepos',\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.btnSec,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: btnStyles.secondary,\n                  onClick: () => {\n                    props.setPreviousPage();\n                    props.previousStep();\n                  },\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: time !== '' ? btnStyles.primary : btnStyles.primaryDisabled,\n                  onClick: e => {\n                    setBtnDisabled(true);\n                    setDateTime(e);\n                  },\n                  disabled: time === '' || btnDisabled,\n                  children: \"Continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/encora/Documents/projects/testDrive/tdn/components/pick-date-time/pickDateTime.js"],"names":["btnStyles","React","useState","useEffect","SechduleContent","InlineWidget","Carousel","useCarData","useUpdateCarData","styles","StepBarV1","StepbarV1Style","Axios","Calendar","moment","Dropdown","StepBar","useUpdatedDateTimeData","pickDateTime","props","carData","setCarData","selectedDate","onChange","Date","time","setTime","selectedDateTime","calenderData","setCalenderData","brand","setBrand","btnDisabled","setBtnDisabled","timeZone","setTimeZone","loadingSlots","setLoading","console","log","selectedCarData","timeZones","title","value","data","setDateTime","e","preventDefault","driveForm","localStorage","getItem","dupDriveForm","JSON","parse","post","UserID","then","res","obj","setItem","stringify","setNextPage","nextStep","catch","err","onReload","selectedTime","isBefore","setSelectedDateTime","settings","showIndicators","infinite","speed","slidesToShow","slidesToScroll","showArrows","showStatus","legend","autoPlay","interval","infiniteLoop","transitionTime","getAvailableSlot","date","firstDay","startOf","format","lastDay","endOf","get","params","timezone","response","error","isActive","scrollToTop","brandName","fields","Brand","Name","renderImages","display","currentPage","Image","thumbnails","large","url","totalSlots","filter","i","availableSlots","spots","status","progressContent","hideForMobile","add","activeStartDate","view","find","x","tz","toLowerCase","map","key","start_time","fontSize","btnSec","secondary","setPreviousPage","previousStep","primary","primaryDisabled","hideForLaptop","height"],"mappings":";;;;;;;;;;AAAA;AAEA,OAAOA,SAAP,MAAsB,+BAAtB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,uDAAP,C,CAAgE;;AAChE,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,iCAA7C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,OAAP,MAAoB,qCAApB;AACA,SAASC,sBAAT,QAAuC,oCAAvC,C,CACA;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAA,OAACoB,YAAD;AAAA,OAAeC;AAAf,MAA2BrB,QAAQ,CAAC,IAAIsB,IAAJ,EAAD,CAAzC;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBxB,QAAQ,CAACiB,KAAK,CAACQ,gBAAP,CAAhC;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkC3B,QAAQ,EAAhD;AACA,QAAM;AAAA,OAAC4B,KAAD;AAAA,OAAQC;AAAR,MAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAC8B,WAAD;AAAA,OAAcC;AAAd,MAAgC/B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACgC,QAAD;AAAA,OAAWC;AAAX,MAA0BjC,QAAQ,CAAC,kBAAD,CAAxC;AACA,QAAM;AAAA,OAACkC,YAAD;AAAA,OAAeC;AAAf,MAA6BnC,QAAQ,CAAC,KAAD,CAA3C;AAEAoC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCpB,KAAK,CAACqB,eAAxC;AACA,QAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,KAAK,EAAE,6BAAT;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GADgB,EAEhB;AAAED,IAAAA,KAAK,EAAE,6BAAT;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GAFgB,EAGhB;AAAED,IAAAA,KAAK,EAAE,8BAAT;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAHgB,EAIhB;AAAED,IAAAA,KAAK,EAAE,6BAAT;AAAwCC,IAAAA,KAAK,EAAE;AAA/C,GAJgB,CAAlB;AAOA,QAAMC,IAAI,GAAG3B,sBAAsB,EAAnC;;AAEA,QAAM4B,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,SAAX,CAAnB;AACApC,IAAAA,KAAK,CAAC0C,IAAN,CAAW,sBAAX,EAAmC;AACjCC,MAAAA,MAAM,EAAEN,YAAY,CAACC,OAAb,CAAqB,QAArB,CADyB;AAEjC1B,MAAAA,IAAI,EAAEC;AAF2B,KAAnC,EAIG+B,IAJH,CAISC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACb,IAAR,EAAc;AACZ,YAAIc,GAAG,mCAAQP,YAAR;AAAsB1B,UAAAA,IAAtB;AAA4BS,UAAAA;AAA5B,UAAP;;AACAe,QAAAA,YAAY,CAACU,OAAb,CAAqB,WAArB,EAAkCP,IAAI,CAACQ,SAAL,CAAeF,GAAf,CAAlC;AACAzB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAd,QAAAA,KAAK,CAAC0C,WAAN;AACA1C,QAAAA,KAAK,CAAC2C,QAAN;AACD;AACF,KAZH,EAaGC,KAbH,CAaUC,GAAD,IAAS1B,OAAO,CAACC,GAAR,CAAYyB,GAAZ,CAblB;AAcD,GAlBD;;AAoBA7D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,KAAK,CAAC8C,QAAV,EAAoB;AAClB,YAAMjB,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AACA,UAAIF,SAAJ,EAAe;AACb,YAAIU,GAAG,GAAGN,IAAI,CAACC,KAAL,CAAWL,SAAX,CAAV;;AACA,YAAIU,GAAG,CAACxB,QAAR,EAAkB;AAChBC,UAAAA,WAAW,CAACuB,GAAG,CAACxB,QAAL,CAAX;AACD;;AACD,YAAIwB,GAAG,CAACjC,IAAR,EAAc;AACZ,cAAIyC,YAAY,GAAGR,GAAG,CAACjC,IAAvB;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACQ,gBAAlB;;AACA,cAAIb,MAAM,CAACoD,YAAD,CAAN,CAAqBC,QAArB,CAA8BrD,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAApC,CAAJ,EAAuD;AACrDD,YAAAA,QAAQ,CAAC,IAAIC,IAAJ,EAAD,CAAR;AACD,WAFD,MAEO;AACLD,YAAAA,QAAQ,CAAC,IAAIC,IAAJ,CAAS0C,YAAT,CAAD,CAAR;AACAxC,YAAAA,OAAO,CAACwC,YAAD,CAAP;AACD;AACF;AACF;AACF;;AACD,QAAI/C,KAAK,CAACqB,eAAV,EAA2B;AACzBnB,MAAAA,UAAU,CAACF,KAAK,CAACqB,eAAP,CAAV;AACD;AACF,GAvBQ,EAuBN,CAACrB,KAAK,CAAC8C,QAAP,EAAiB9C,KAAK,CAACqB,eAAvB,CAvBM,CAAT;AAyBArC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACiD,mBAAN,CAA0B3C,IAA1B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,QAAM4C,QAAQ,GAAG;AACfC,IAAAA,cAAc,EAAE,KADD;AAEfC,IAAAA,QAAQ,EAAE,IAFK;AAGfC,IAAAA,KAAK,EAAE,GAHQ;AAIfC,IAAAA,YAAY,EAAE,CAJC;AAKfC,IAAAA,cAAc,EAAE,CALD;AAMfC,IAAAA,UAAU,EAAE,KANG;AAOfC,IAAAA,UAAU,EAAE,KAPG;AAQfC,IAAAA,MAAM,EAAE,KARO;AASfC,IAAAA,QAAQ,EAAE,KATK;AAUfC,IAAAA,QAAQ,EAAE,MAVK;AAWfC,IAAAA,YAAY,EAAE,IAXC;AAYfC,IAAAA,cAAc,EAAE;AAZD,GAAjB;;AAeA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjC9C,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAI+C,QAAQ,GAAGtE,MAAM,CAACqE,IAAD,CAAN,CAAaE,OAAb,CAAqB,OAArB,EAA8BC,MAA9B,CAAqC,YAArC,CAAf;AACA,QAAIC,OAAO,GAAGzE,MAAM,CAACqE,IAAD,CAAN,CAAaK,KAAb,CAAmB,OAAnB,EAA4BF,MAA5B,CAAmC,YAAnC,CAAd;AACA1E,IAAAA,KAAK,CAAC6E,GAAN,CAAW,wBAAX,EAAoC;AAClCC,MAAAA,MAAM,EAAE;AACNN,QAAAA,QADM;AAENG,QAAAA,OAFM;AAGNI,QAAAA,QAAQ,EAAEzD;AAHJ;AAD0B,KAApC,EAMGsB,IANH,CAOGoC,QAAD,IAAc;AACZ/D,MAAAA,eAAe,CAAC+D,QAAQ,CAAChD,IAAV,CAAf;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVH,EAWGwD,KAAD,IAAW;AACTxD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,KAdH;AAgBD,GApBD;;AAsBA1F,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,KAAK,CAAC2E,QAAN,KAAmB,IAAvB,EAA6B;AAC3BZ,MAAAA,gBAAgB,CAAC,IAAI1D,IAAJ,EAAD,CAAhB;AACD;AACF,GAJQ,EAIN,CAACL,KAAK,CAAC2E,QAAP,CAJM,CAAT;AAMA3F,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC4E,WAAN;AACD,GAFQ,EAEN,CAAC5E,KAAK,CAAC2E,QAAP,CAFM,CAAT;AAIA3F,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6F,SAAS,GAAG,EAAhB;AACA1D,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QACEpB,KAAK,CAAC2E,QAAN,KAAmB,IAAnB,IACA3E,KAAK,CAACqB,eADN,IAEArB,KAAK,CAACqB,eAAN,CAAsByD,MAHxB,EAIE;AACArF,MAAAA,KAAK,CAAC6E,GAAN,CAAW,kBAAiBtE,KAAK,CAACqB,eAAN,CAAsByD,MAAtB,CAA6BC,KAA7B,CAAmC,CAAnC,CAAsC,EAAlE,EAAqE1C,IAArE,CACGoC,QAAD,IAAc;AACZI,QAAAA,SAAS,GAAGJ,QAAQ,CAAChD,IAAT,CAAcqD,MAAd,CAAqBE,IAAjC;AACApE,QAAAA,QAAQ,CAACiE,SAAD,CAAR;AACD,OAJH,EAKGH,KAAD,IAAW;AACTvD,QAAAA,OAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,OAPH;AASD;;AACDxE,IAAAA,UAAU,CAACF,KAAK,CAACqB,eAAP,CAAV;AACD,GAnBQ,EAmBN,CAACrB,KAAK,CAAC2E,QAAP,EAAiB3E,KAAK,CAAC8C,QAAvB,EAAiC9C,KAAK,CAACqB,eAAvC,CAnBM,CAAT;;AAqBA,QAAM4D,YAAY,GAAG,MAAM;AACzB,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAG,GAAElF,KAAK,CAACmF,WAAN,KAAsB,CAAtB,GAA0B,OAA1B,GAAoC,MAAO;AAAzD,OAAZ;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD,kCAAcjC,QAAd;AAAA,kCACE;AAAA,oCACE;AACE,cAAA,GAAG,EACDjD,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,GACI7E,OAAO,CAAC6E,MAAR,CAAeM,KAAf,CAAqB,CAArB,EAAwBC,UAAxB,CAAmCC,KAAnC,CAAyCC,GAD7C,GAEI;AAJR;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,wBACGtF,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,IAA6B7E,OAAO,CAAC6E,MAAR,CAAeE;AAD/C;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAA,oCACE;AACE,cAAA,GAAG,EACD/E,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,GACI7E,OAAO,CAAC6E,MAAR,CAAeM,KAAf,CAAqB,CAArB,EAAwBC,UAAxB,CAAmCC,KAAnC,CAAyCC,GAD7C,GAEI;AAJR;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,wBACGtF,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,IAA6B7E,OAAO,CAAC6E,MAAR,CAAeE;AAD/C;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAyBE;AAAA,oCACE;AACE,cAAA,GAAG,EACD/E,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,GACI7E,OAAO,CAAC6E,MAAR,CAAeM,KAAf,CAAqB,CAArB,EAAwBC,UAAxB,CAAmCC,KAAnC,CAAyCC,GAD7C,GAEI;AAJR;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,wBACGtF,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,IAA6B7E,OAAO,CAAC6E,MAAR,CAAeE;AAD/C;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+CD,GAhDD;;AAiDA,MAAIQ,UAAU,GACZ/E,YAAY,IACZA,YAAY,CAACgF,MAAb,CACGC,CAAD,IAAOA,CAAC,CAAC1B,IAAF,KAAWrE,MAAM,CAACQ,YAAD,CAAN,CAAqBgE,MAArB,CAA4B,YAA5B,CADpB,CAFF;AAKA,MAAIwB,cAAc,GAChBH,UAAU,IACVA,UAAU,CAAC,CAAD,CADV,IAEAA,UAAU,CAAC,CAAD,CAAV,CAAcI,KAAd,CAAoBH,MAApB,CAA4BC,CAAD,IAAOA,CAAC,CAACG,MAAF,KAAa,WAA/C,CAHF;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEX,MAAAA,OAAO,EAAG,GAAElF,KAAK,CAACmF,WAAN,KAAsB,CAAtB,GAA0B,OAA1B,GAAoC,MAAO;AAAzD,KAAZ;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCAmBE;AAAK,YAAA,SAAS,EAAC,gDAAf;AAAA,oCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAG,GAAE7F,MAAM,CAACwG,eAAgB,cAA1C;AAAA,qCAEE;AAAK,gBAAA,SAAS,EAAEtG,cAAc,CAACuG,aAA/B;AAAA,uCACE,QAAC,SAAD,oBAAe/F,KAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,qCAaE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA,6CACE,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE,IAAIK,IAAJ,EADX;AAEE,wBAAA,OAAO,EAAE,IAAIA,IAAJ,CAASV,MAAM,GAAGqG,GAAT,CAAa,EAAb,EAAiB,MAAjB,CAAT,CAFX;AAGE,wBAAA,QAAQ,EAAE5F,QAHZ;AAIE,wBAAA,KAAK,EAAED,YAJT;AAKE,wBAAA,SAAS,EAAC,qBALZ;AAME,wBAAA,UAAU,EAAE,IANd;AAOE,wBAAA,UAAU,EAAE,IAPd;AAQE,wBAAA,YAAY,EAAC,IARf;AASE,wBAAA,uBAAuB,EAAE,CAAC;AACxB8F,0BAAAA,eADwB;AAExBzE,0BAAAA,KAFwB;AAGxB0E,0BAAAA;AAHwB,yBAAD,KAInBnC,gBAAgB,CAACkC,eAAD;AAbxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAqBE;AAAK,oBAAA,SAAS,EAAC,uCAAf;AAAA,4CAyCE;AAAK,sBAAA,SAAS,EAAC,cAAf;AAAA,gCACGlF,QAAQ,iBACP;AAAA,mCAEIO,SAAS,CAAC6E,IAAV,CAAe,CAACC,CAAD,EAAIV,CAAJ,KAAUU,CAAC,CAAC5E,KAAF,KAAYT,QAArC,EACGQ,KAHP,EAII,GAJJ,OAKI5B,MAAM,GAAG0G,EAAT,CAAYtF,QAAZ,EAAsBoD,MAAtB,CAA6B,IAA7B,EAAmCmC,WAAnC,EALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,4BAzCF,eAoDE;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA,8CACE;AAAA,kCAAI3G,MAAM,CAACQ,YAAD,CAAN,CAAqBgE,MAArB,CAA4B,eAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,8BADF,EAEGlD,YAAY,IAAI,CAAC0E,cAAjB,iBACC;AAAK,wBAAA,SAAS,EAAC,eAAf;AAAA,+CACE;AAAK,0BAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAHJ,EAOGA,cAAc,iBACb;AAAK,wBAAA,SAAS,EAAC,OAAf;AAAA,+CACE;AAAA,oCACG,CAACA,cAAc,IAAI,EAAnB,EAAuBY,GAAvB,CAA2B,CAACb,CAAD,EAAIc,GAAJ,kBAC1B;AAEE,4BAAA,SAAS,EACPd,CAAC,CAACe,UAAF,KAAiBnG,IAAjB,GACI,uBADJ,GAEI,eALR;AAAA,oDAQE;AACE,8BAAA,KAAK,EAAE;AAAEoG,gCAAAA,QAAQ,EAAE;AAAZ,+BADT;AAEE,8BAAA,SAAS,EAAE,mBAFb;AAAA,wCAIG/G,MAAM,CAAC+F,CAAC,CAACe,UAAH,CAAN,CACEJ,EADF,CACKtF,QADL,EAEEoD,MAFF,CAES,IAFT;AAJH;AAAA;AAAA;AAAA;AAAA,oCARF,eAiBE;AACE,8BAAA,KAAK,EAAE;AAAEuC,gCAAAA,QAAQ,EAAE;AAAZ,+BADT;AAEE,8BAAA,SAAS,EACPhB,CAAC,CAACe,UAAF,KAAiBnG,IAAjB,GACI,eADJ,GAEI,YALR;AAOE,8BAAA,OAAO,EAAE,MAAM;AACbC,gCAAAA,OAAO,CAACmF,CAAC,CAACe,UAAH,CAAP;AACAhF,gCAAAA,IAAI,CAACiE,CAAC,CAACe,UAAH,CAAJ;AACD,+BAVH;AAAA,wCAYGf,CAAC,CAACe,UAAF,KAAiBnG,IAAjB,GACG,UADH,GAEG;AAdN;AAAA;AAAA;AAAA;AAAA,oCAjBF;AAAA,6BACOkG,GADP;AAAA;AAAA;AAAA;AAAA,kCADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BARJ,EAiDG,CAACb,cAAD,IAAmB,CAAC1E,YAApB,iBACC;AAAK,wBAAA,SAAS,EAAC,0BAAf;AAAA,gDACE;AAAA,2DACqB,GADrB,EAEGtB,MAAM,CAACQ,YAAD,CAAN,CAAqBgE,MAArB,CAA4B,SAA5B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAKE;AAAA;AAAA;AAAA;AAAA,gCALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANF;AAAA;AAAA;AAAA;AAAA;AAAA,8BAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BApDF;AAAA;AAAA;AAAA;AAAA;AAAA,0BArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,oBARF,eAgKE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAE7E,MAAM,CAACqH,MAAvB;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAE9H,SAAS,CAAC+H,SAFvB;AAGE,kBAAA,OAAO,EAAE,MAAM;AACb5G,oBAAAA,KAAK,CAAC6G,eAAN;AACA7G,oBAAAA,KAAK,CAAC8G,YAAN;AACD,mBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAWE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EACPxG,IAAI,KAAK,EAAT,GACIzB,SAAS,CAACkI,OADd,GAEIlI,SAAS,CAACmI,eALlB;AAOE,kBAAA,OAAO,EAAGrF,CAAD,IAAO;AACdb,oBAAAA,cAAc,CAAC,IAAD,CAAd;AACAY,oBAAAA,WAAW,CAACC,CAAD,CAAX;AACD,mBAVH;AAWE,kBAAA,QAAQ,EAAErB,IAAI,KAAK,EAAT,IAAeO,WAX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAuNE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,+CAAf;AAAA,oCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAG,GAAEvB,MAAM,CAACwG,eAAgB,cAA1C;AAAA,qCAEE;AAAK,gBAAA,SAAS,EAAEtG,cAAc,CAACyH,aAA/B;AAAA,uCACE,QAAC,SAAD;AAAW,kBAAA,MAAM,EAAE;AAAnB,mBAA6BjH,KAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE;AAAA,wBAAMC,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,IAA6BG,YAAY;AAA/C;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE;AAAA,0BACGtE,KAAK,gBACJ;AAAA,6BACGA,KADH,EAEI,GAFJ,EAGGV,OAAO,IAAIA,OAAO,CAAC6E,MAAnB,GACG7E,OAAO,CAAC6E,MAAR,CAAeE,IADlB,GAEG,iBALN;AAAA,gCADI,GASJ;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA2BE;AAAK,YAAA,SAAS,EAAC,+CAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCAaE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,SAAS,EAAC,uCAAf;AAAA,2CAyCE;AAAK,sBAAA,SAAS,EAAC,cAAf;AAAA,gCACGjE,QAAQ,iBACP;AAAA,mCAEIO,SAAS,CAAC6E,IAAV,CAAe,CAACC,CAAD,EAAIV,CAAJ,KAAUU,CAAC,CAAC5E,KAAF,KAAYT,QAArC,EACGQ,KAHP,EAII,GAJJ,OAKI5B,MAAM,GAAG0G,EAAT,CAAYtF,QAAZ,EAAsBoD,MAAtB,CAA6B,IAA7B,EAAmCmC,WAAnC,EALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAzCF;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eA2DE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CAEE;AAAA,6CACE,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE,IAAIjG,IAAJ,EADX;AAEE,wBAAA,OAAO,EAAE,IAAIA,IAAJ,CAASV,MAAM,GAAGqG,GAAT,CAAa,EAAb,EAAiB,MAAjB,CAAT,CAFX;AAGE,wBAAA,QAAQ,EAAE5F,QAHZ;AAIE,wBAAA,KAAK,EAAED,YAJT;AAKE,wBAAA,SAAS,EAAC,qBALZ;AAME,wBAAA,UAAU,EAAE,IANd;AAOE,wBAAA,UAAU,EAAE,IAPd;AAQE,wBAAA,YAAY,EAAC,IARf;AASE,wBAAA,uBAAuB,EAAE,CAAC;AACxB8F,0BAAAA,eADwB;AAExBzE,0BAAAA,KAFwB;AAGxB0E,0BAAAA;AAHwB,yBAAD,KAInBnC,gBAAgB,CAACkC,eAAD;AAbxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,0BADF,eAqBE;AAAK,oBAAA,SAAS,EAAC,6BAAf;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA,8CACE;AAAA,kCAAItG,MAAM,CAACQ,YAAD,CAAN,CAAqBgE,MAArB,CAA4B,eAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,8BADF,EAEGlD,YAAY,IAAI,CAAC0E,cAAjB,iBACC;AAAK,wBAAA,SAAS,EAAC,eAAf;AAAA,+CACE;AAAK,0BAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAHJ,EAOGA,cAAc,iBACb;AAAK,wBAAA,SAAS,EAAC,OAAf;AAAA,+CACE;AAAA,oCACG,CAACA,cAAc,IAAI,EAAnB,EAAuBY,GAAvB,CAA2B,CAACb,CAAD,EAAIc,GAAJ,kBAC1B;AAEE,4BAAA,SAAS,EACPd,CAAC,CAACe,UAAF,KAAiBnG,IAAjB,GACI,uBADJ,GAEI,eALR;AAAA,oDAQE;AAAM,8BAAA,SAAS,EAAE,mBAAjB;AAAA,wCACGX,MAAM,CAAC+F,CAAC,CAACe,UAAH,CAAN,CACEJ,EADF,CACKtF,QADL,EAEEoD,MAFF,CAES,IAFT;AADH;AAAA;AAAA;AAAA;AAAA,oCARF,eAcE;AACE,8BAAA,SAAS,EACPuB,CAAC,CAACe,UAAF,KAAiBnG,IAAjB,GACI,eADJ,GAEI,YAJR;AAME,8BAAA,OAAO,EAAE,MAAMC,OAAO,CAACmF,CAAC,CAACe,UAAH,CANxB;AAAA,wCAQGf,CAAC,CAACe,UAAF,KAAiBnG,IAAjB,GACG,UADH,GAEG;AAVN;AAAA;AAAA;AAAA;AAAA,oCAdF;AAAA,6BACOkG,GADP;AAAA;AAAA;AAAA;AAAA,kCADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BARJ,EA0CG,CAACb,cAAD,IAAmB,CAAC1E,YAApB,iBACC;AAAK,wBAAA,SAAS,EAAC,0BAAf;AAAA,gDACE;AAAA,2DACqB,GADrB,EAEGtB,MAAM,CAACQ,YAAD,CAAN,CAAqBgE,MAArB,CAA4B,SAA5B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAKE;AAAA;AAAA;AAAA;AAAA,gCALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANF;AAAA;AAAA;AAAA;AAAA;AAAA,8BA3CJ,EAoDG1C,IAAI,IAAInB,IAAR,gBACC;AAAK,wBAAA,KAAK,EAAE;AAAE4G,0BAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,8BADD,gBAGC,qCAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BArBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,oBADF,eA6JE;AAAK,cAAA,SAAS,EAAE5G,IAAI,GAAG,UAAH,GAAgB,aAApC;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAEhB,MAAM,CAACqH,MAAvB;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAE9H,SAAS,CAAC+H,SAFvB;AAGE,kBAAA,OAAO,EAAE,MAAM;AACb5G,oBAAAA,KAAK,CAAC6G,eAAN;AACA7G,oBAAAA,KAAK,CAAC8G,YAAN;AACD,mBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAWE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EACPxG,IAAI,KAAK,EAAT,GACIzB,SAAS,CAACkI,OADd,GAEIlI,SAAS,CAACmI,eALlB;AAOE,kBAAA,OAAO,EAAGrF,CAAD,IAAO;AACdb,oBAAAA,cAAc,CAAC,IAAD,CAAd;AACAY,oBAAAA,WAAW,CAACC,CAAD,CAAX;AACD,mBAVH;AAWE,kBAAA,QAAQ,EAAErB,IAAI,KAAK,EAAT,IAAeO,WAX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA7JF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvNF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsbD","sourcesContent":["/** @format */\n\nimport btnStyles from './../../styles/Btn.module.css';\n\nimport React, { useState, useEffect } from 'react';\nimport SechduleContent from './../../common-component/sechduleDesc';\nimport { InlineWidget } from 'react-calendly';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { useCarData, useUpdateCarData } from './../../contexts/CarDataContext';\nimport styles from '../../styles/Home.module.css';\n\nimport StepBarV1 from './../../components/step-bar/stepBarV1';\nimport StepbarV1Style from './../../styles/StepBarV1.module.css';\n\nimport Axios from 'axios';\nimport Calendar from 'react-calendar';\nimport moment from 'moment-timezone';\nimport Dropdown from './dropDown';\n\nimport StepBar from './../../components/step-bar/stepBar';\nimport { useUpdatedDateTimeData } from '../../contexts/DateTimeDataContext';\n// import StepBarV1 from \"./../../components/step-bar/stepBarV1\";\n\nexport default function pickDateTime(props) {\n  const [carData, setCarData] = useState(null);\n\n  const [selectedDate, onChange] = useState(new Date());\n  const [time, setTime] = useState(props.selectedDateTime);\n  const [calenderData, setCalenderData] = useState();\n  const [brand, setBrand] = useState('');\n  const [btnDisabled, setBtnDisabled] = useState(false);\n  const [timeZone, setTimeZone] = useState('America/New_York');\n  const [loadingSlots, setLoading] = useState(false);\n\n  console.log('selected car data ', props.selectedCarData);\n  const timeZones = [\n    { title: 'Eastern Time - US & Canada ', value: 'America/New_York' },\n    { title: 'Central Time - US & Canada ', value: 'America/Chicago' },\n    { title: 'Mountain Time - US & Canada ', value: 'America/Denver' },\n    { title: 'Pacific Time - US & Canada ', value: 'America/Los_Angeles' },\n  ];\n\n  const data = useUpdatedDateTimeData();\n\n  const setDateTime = (e) => {\n    e.preventDefault();\n    const driveForm = localStorage.getItem('driveForm');\n    let dupDriveForm = JSON.parse(driveForm);\n    Axios.post('/api/user/updateDate', {\n      UserID: localStorage.getItem('userId'),\n      Date: time,\n    })\n      .then((res) => {\n        if (res.data) {\n          let obj = { ...dupDriveForm, time, timeZone };\n          localStorage.setItem('driveForm', JSON.stringify(obj));\n          setBtnDisabled(false);\n          props.setNextPage();\n          props.nextStep();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (props.onReload) {\n      const driveForm = localStorage.getItem('driveForm');\n      if (driveForm) {\n        let obj = JSON.parse(driveForm);\n        if (obj.timeZone) {\n          setTimeZone(obj.timeZone);\n        }\n        if (obj.time) {\n          let selectedTime = obj.time;\n          console.log(props.selectedDateTime)\n          if (moment(selectedTime).isBefore(moment(new Date()))) {\n            onChange(new Date());\n          } else {\n            onChange(new Date(selectedTime));\n            setTime(selectedTime);\n          }\n        }\n      }\n    }\n    if (props.selectedCarData) {\n      setCarData(props.selectedCarData);\n    }\n  }, [props.onReload, props.selectedCarData]);\n\n  useEffect(() => {\n    props.setSelectedDateTime(time);\n  }, [time]);\n\n  const settings = {\n    showIndicators: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    showArrows: false,\n    showStatus: false,\n    legend: false,\n    autoPlay: false,\n    interval: '5000',\n    infiniteLoop: true,\n    transitionTime: '1000',\n  };\n\n  const getAvailableSlot = (date) => {\n    setLoading(true);\n    let firstDay = moment(date).startOf('month').format('YYYY-MM-DD');\n    let lastDay = moment(date).endOf('month').format('YYYY-MM-DD');\n    Axios.get(`/api/getCalendarEvents`, {\n      params: {\n        firstDay,\n        lastDay,\n        timezone: timeZone,\n      },\n    }).then(\n      (response) => {\n        setCalenderData(response.data);\n        setLoading(false);\n      },\n      (error) => {\n        setLoading(false);\n        console.log(error);\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (props.isActive === true) {\n      getAvailableSlot(new Date());\n    }\n  }, [props.isActive]);\n\n  useEffect(() => {\n    props.scrollToTop();\n  }, [props.isActive]);\n\n  useEffect(() => {\n    let brandName = '';\n    console.log('fetching brnds');\n    if (\n      props.isActive === true &&\n      props.selectedCarData &&\n      props.selectedCarData.fields\n    ) {\n      Axios.get(`/api/get-brand/${props.selectedCarData.fields.Brand[0]}`).then(\n        (response) => {\n          brandName = response.data.fields.Name;\n          setBrand(brandName);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n    setCarData(props.selectedCarData);\n  }, [props.isActive, props.onReload, props.selectedCarData]);\n\n  const renderImages = () => {\n    return (\n      <div style={{ display: `${props.currentPage === 2 ? 'block' : 'none'}` }}>\n        <div className=\"carSlidercss\">\n          <div className=\"pickcar\">\n            <p>I want to drive a</p>\n          </div>\n          <Carousel {...settings}>\n            <div>\n              <img\n                src={\n                  carData && carData.fields\n                    ? carData.fields.Image[0].thumbnails.large.url\n                    : ''\n                }\n              />\n              <p className=\"legend\">\n                {carData && carData.fields && carData.fields.Name}\n              </p>\n            </div>\n            <div>\n              <img\n                src={\n                  carData && carData.fields\n                    ? carData.fields.Image[0].thumbnails.large.url\n                    : ''\n                }\n              />\n              <p className=\"legend\">\n                {carData && carData.fields && carData.fields.Name}\n              </p>\n            </div>\n            <div>\n              <img\n                src={\n                  carData && carData.fields\n                    ? carData.fields.Image[0].thumbnails.large.url\n                    : ''\n                }\n              />\n              <p className=\"legend\">\n                {carData && carData.fields && carData.fields.Name}\n              </p>\n            </div>\n          </Carousel>\n        </div>\n      </div>\n    );\n  };\n  let totalSlots =\n    calenderData &&\n    calenderData.filter(\n      (i) => i.date === moment(selectedDate).format('YYYY-MM-DD')\n    );\n  let availableSlots =\n    totalSlots &&\n    totalSlots[0] &&\n    totalSlots[0].spots.filter((i) => i.status === 'available');\n\n  return (\n    <div style={{ display: `${props.currentPage === 2 ? 'block' : 'none'}` }}>\n      <div className=\"container-fluid height100vh\">\n        <div className=\"hideContent\">\n          <div className=\"row justify-content-center\">\n            {/* <div className=\"col-sm-12 col-md-5 col-lg-5 height98vh\">\n              <div className=\"\">{renderImages()}</div>\n              <div className=\"pickcardesc\">\n                <p>\n                  {brand ? (\n                    <>\n                      {brand}\n                      {` `}\n                      {carData && carData.fields\n                        ? carData.fields.Name\n                        : 'sample car name'}\n                    </>\n                  ) : (\n                    'Loading . . .'\n                  )}\n                </p>\n              </div>\n            </div> */}\n            <div className=\"col-sm-12 col-md-7 col-lg-7  min-width-desktop\">\n              <SechduleContent />\n              <div className={`${styles.progressContent} marTopBot20`}>\n                {/* <StepBar activeStep=\"2\" size=\"4\" /> */}\n                <div className={StepbarV1Style.hideForMobile}>\n                  <StepBarV1 {...props} />\n                </div>\n              </div>\n              <div className=\"\">\n                {/* <InlineWidget\n                  url=\"https://calendly.com/algoscale-test/test-drive-ninja\"\n                  pageSettings={{\n                    backgroundColor: 'ffffff',\n                    hideEventTypeDetails: true,\n                    hideLandingPageDetails: true,\n                  }}\n                  styles={{\n                    height: '100%',\n                  }}\n                /> */}\n\n                <div className=\"pickContent\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-8 col-lg-8\">\n                      <h6>Select a Date & Time</h6>\n                      <div>\n                        <Calendar\n                          minDate={new Date()}\n                          maxDate={new Date(moment().add(59, 'days'))}\n                          onChange={onChange}\n                          value={selectedDate}\n                          className=\"manualReactCalendar\"\n                          next2Label={null}\n                          prev2Label={null}\n                          calendarType=\"US\"\n                          onActiveStartDateChange={({\n                            activeStartDate,\n                            value,\n                            view,\n                          }) => getAvailableSlot(activeStartDate)}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-12 col-md-4 col-lg-4 pl-0 pr-0\">\n                      {/* <select\n                        value={timeZone}\n                        className={styles.slctPickDateTime}\n                        defaultValue=\"America/New_York\"\n                        id=\"sel1\"\n                        onChange={(e) => setTimeZone(e.target.value)}\n                      >\n                        <option value=\"America/New_York\">\n                          Eastern Time - US & Canada (\n                          {moment(new Date())\n                            .tz('America/New_York')\n                            .format('LT')}\n                          )\n                        </option>\n                        <option value=\"America/Chicago\">\n                          Central Time - US & Canada (\n                          {moment(new Date())\n                            .tz('America/Chicago')\n                            .format('LT')}\n                          )\n                        </option>\n                        <option value=\"America/Denver\">\n                          Mountain Time - US & Canada (\n                          {moment(new Date()).tz('America/Denver').format('LT')}\n                          )\n                        </option>\n                        <option value=\"America/Los_Angeles\">\n                          Pacific Time - US & Canada (\n                          {moment(new Date())\n                            .tz('America/Los_Angeles')\n                            .format('LT')}\n                          )\n                        </option>\n                      </select> */}\n\n                      {/* <Dropdown\n                        timeZones={timeZones}\n                        timeZone={timeZone}\n                        setTimeZone={setTimeZone}\n                      /> */}\n                      <div className=\"timeZoneslct\">\n                        {timeZone && (\n                          <label>\n                            {\n                              timeZones.find((x, i) => x.value === timeZone)\n                                .title\n                            }{' '}\n                            ({moment().tz(timeZone).format('LT').toLowerCase()})\n                          </label>\n                        )}\n                      </div>\n                      <div className=\"timechoose\">\n                        <p>{moment(selectedDate).format('dddd, MMMM DD')}</p>\n                        {loadingSlots && !availableSlots && (\n                          <div className=\"loaderContent\">\n                            <div className=\"loader\"></div>\n                          </div>\n                        )}\n                        {availableSlots && (\n                          <div className=\"slots\">\n                            <ul>\n                              {(availableSlots || []).map((i, key) => (\n                                <li\n                                  key={key}\n                                  className={\n                                    i.start_time === time\n                                      ? 'selectedTimeContainer'\n                                      : 'timeContainer'\n                                  }\n                                >\n                                  <span\n                                    style={{ fontSize: '12px' }}\n                                    className={'chooseTimeElement'}\n                                  >\n                                    {moment(i.start_time)\n                                      .tz(timeZone)\n                                      .format('LT')}\n                                  </span>\n\n                                  <span\n                                    style={{ fontSize: '12px' }}\n                                    className={\n                                      i.start_time === time\n                                        ? 'selected-time'\n                                        : 'chooseTime'\n                                    }\n                                    onClick={() => {\n                                      setTime(i.start_time);\n                                      data(i.start_time);\n                                    }}\n                                  >\n                                    {i.start_time === time\n                                      ? 'Selected'\n                                      : 'Choose'}\n                                  </span>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                        {!availableSlots && !loadingSlots && (\n                          <div className=\"text-center no-time-slot\">\n                            <b>\n                              No times available{' '}\n                              {moment(selectedDate).format('MMMM DD')}\n                            </b>\n                            <br />\n                            <span>Please select another date</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\" mt-3 relativepos\">\n                <div className={styles.btnSec}>\n                  <button\n                    type=\"button\"\n                    className={btnStyles.secondary}\n                    onClick={() => {\n                      props.setPreviousPage();\n                      props.previousStep();\n                    }}\n                  >\n                    Back\n                  </button>\n                  <button\n                    type=\"button\"\n                    className={\n                      time !== ''\n                        ? btnStyles.primary\n                        : btnStyles.primaryDisabled\n                    }\n                    onClick={(e) => {\n                      setBtnDisabled(true);\n                      setDateTime(e);\n                    }}\n                    disabled={time === '' || btnDisabled}\n                  >\n                    Continue\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* for mobile responsive content  */}\n        <div className=\"hideForMobile\">\n          <div className=\"row \">\n            <div className=\"col-sm-12 col-md-5 col-lg-5 min-width-desktop\">\n              <SechduleContent />\n              <div className={`${styles.progressContent} marTopBot20`}>\n                {/* <StepBar activeStep=\"2\" size=\"4\" /> */}\n                <div className={StepbarV1Style.hideForLaptop}>\n                  <StepBarV1 mobile={true} {...props} />\n                </div>\n              </div>\n              <div>{carData && carData.fields && renderImages()}</div>\n              <div className=\"pickcardesc\">\n                <p>\n                  {brand ? (\n                    <>\n                      {brand}\n                      {` `}\n                      {carData && carData.fields\n                        ? carData.fields.Name\n                        : 'sample car name'}\n                    </>\n                  ) : (\n                    'Loading . . .'\n                  )}\n                </p>\n                {/* <p>{carData && carData.fields ? carData.fields.Name : ''}</p> */}\n              </div>\n            </div>\n            <div className=\"col-sm-12 col-md-7 col-lg-7 min-width-desktop\">\n              <div className=\"marTopBot20\">\n                {/* <InlineWidget\n                  url=\"https://calendly.com/algoscale-test/test-drive-ninja\"\n                  pageSettings={{\n                    backgroundColor: \"ffffff\",\n                    hideEventTypeDetails: true,\n                    hideLandingPageDetails: true,\n                  }}\n                  styles={{\n                    height: \"600px\",\n                  }}\n                /> */}\n\n                <div className=\"pickContent\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                      <h6>Select a Date & Time</h6>\n                    </div>\n                    <div className=\"col-sm-12 col-md-6 col-lg-6 pl-0 pr-0\">\n                      {/* <select\n                        value={timeZone}\n                        className={styles.slctPickDateTime}\n                        defaultValue=\"America/New_York\"\n                        id=\"sel1\"\n                        onChange={(e) => setTimeZone(e.target.value)}\n                      >\n                        <option value=\"America/New_York\">\n                          Eastern Time - US & Canada (\n                          {moment(new Date())\n                            .tz('America/New_York')\n                            .format('LT')}\n                          )\n                        </option>\n                        <option value=\"America/Chicago\">\n                          Central Time - US & Canada (\n                          {moment(new Date())\n                            .tz('America/Chicago')\n                            .format('LT')}\n                          )\n                        </option>\n                        <option value=\"America/Denver\">\n                          Mountain Time - US & Canada (\n                          {moment(new Date()).tz('America/Denver').format('LT')}\n                          )\n                        </option>\n                        <option value=\"America/Los_Angeles\">\n                          Pacific Time - US & Canada (\n                          {moment(new Date())\n                            .tz('America/Los_Angeles')\n                            .format('LT')}\n                          )\n                        </option>\n                      </select> */}\n\n                      {/* <Dropdown\n                        timeZones={timeZones}\n                        timeZone={timeZone}\n                        setTimeZone={setTimeZone}\n                      /> */}\n                      <div className=\"timeZoneslct\">\n                        {timeZone && (\n                          <label>\n                            {\n                              timeZones.find((x, i) => x.value === timeZone)\n                                .title\n                            }{' '}\n                            ({moment().tz(timeZone).format('LT').toLowerCase()})\n                          </label>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-8 col-lg-8\">\n                      {/* <h6>Select a Date & Time</h6> */}\n                      <div>\n                        <Calendar\n                          minDate={new Date()}\n                          maxDate={new Date(moment().add(59, 'days'))}\n                          onChange={onChange}\n                          value={selectedDate}\n                          className=\"manualReactCalendar\"\n                          next2Label={null}\n                          prev2Label={null}\n                          calendarType=\"US\"\n                          onActiveStartDateChange={({\n                            activeStartDate,\n                            value,\n                            view,\n                          }) => getAvailableSlot(activeStartDate)}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-12 col-md-4 col-lg-4\">\n                      <div className=\"timechoose\">\n                        <p>{moment(selectedDate).format('dddd, MMMM DD')}</p>\n                        {loadingSlots && !availableSlots && (\n                          <div className=\"loaderContent\">\n                            <div className=\"loader\"></div>\n                          </div>\n                        )}\n                        {availableSlots && (\n                          <div className=\"slots\">\n                            <ul>\n                              {(availableSlots || []).map((i, key) => (\n                                <li\n                                  key={key}\n                                  className={\n                                    i.start_time === time\n                                      ? 'selectedTimeContainer'\n                                      : 'timeContainer'\n                                  }\n                                >\n                                  <span className={'chooseTimeElement'}>\n                                    {moment(i.start_time)\n                                      .tz(timeZone)\n                                      .format('LT')}\n                                  </span>\n\n                                  <span\n                                    className={\n                                      i.start_time === time\n                                        ? 'selected-time'\n                                        : 'chooseTime'\n                                    }\n                                    onClick={() => setTime(i.start_time)}\n                                  >\n                                    {i.start_time === time\n                                      ? 'Selected'\n                                      : 'Choose'}\n                                  </span>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                        {!availableSlots && !loadingSlots && (\n                          <div className=\"text-center no-time-slot\">\n                            <b>\n                              No times available{' '}\n                              {moment(selectedDate).format('MMMM DD')}\n                            </b>\n                            <br />\n                            <span>Please select another date</span>\n                          </div>\n                        )}\n                        {data && time ? (\n                          <div style={{ height: '75px' }}></div>\n                        ) : (\n                          <></>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className={time ? 'fixedPos' : 'relativepos'}>\n                <div className={styles.btnSec}>\n                  <button\n                    type=\"button\"\n                    className={btnStyles.secondary}\n                    onClick={() => {\n                      props.setPreviousPage();\n                      props.previousStep();\n                    }}\n                  >\n                    Back\n                  </button>\n                  <button\n                    type=\"button\"\n                    className={\n                      time !== ''\n                        ? btnStyles.primary\n                        : btnStyles.primaryDisabled\n                    }\n                    onClick={(e) => {\n                      setBtnDisabled(true);\n                      setDateTime(e);\n                    }}\n                    disabled={time === '' || btnDisabled}\n                  >\n                    Continue\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end for mobile responsive  */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}