{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/encora/Documents/projects/testDrive/tdn/components/step-bar/stepBar.js\";\nimport stepStyle from './../../styles/StepBar.module.css';\nimport Step from './step';\nimport StepNames from './stepNames';\nexport default function StepBar(props) {\n  const {\n    activeStep,\n    size\n  } = props;\n  let stepArray = [];\n\n  for (let i = 1; i <= size; i++) {\n    stepArray.push(i);\n  }\n\n  const stepText = ['Pick a Vehicle', 'Pick a Day & Time', // 'Pick Location',\n  'The Basics', 'Proof of License'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stepStyle.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: stepStyle.stepNumbersContainer,\n      children: stepArray.map((stepNumber, index) => {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          active: activeStep == stepNumber ? true : false,\n          stepNumber: stepNumber,\n          isLastStep: parseInt(size) === stepNumber ? true : false,\n          isFirstStep: stepNumber == 1 ? true : false,\n          stepText: stepText[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: stepStyle.stepNamesContainer,\n      children: /*#__PURE__*/_jsxDEV(StepNames, {\n        activeStep: activeStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/encora/Documents/projects/testDrive/tdn/components/step-bar/stepBar.js"],"names":["stepStyle","Step","StepNames","StepBar","props","activeStep","size","stepArray","i","push","stepText","container","stepNumbersContainer","map","stepNumber","index","parseInt","stepNamesContainer"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,mCAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuBF,KAA7B;AACA,MAAIG,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,IAArB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,SAAS,CAACE,IAAV,CAAeD,CAAf;AACD;;AACD,QAAME,QAAQ,GAAG,CACf,gBADe,EAEf,mBAFe,EAGf;AACA,cAJe,EAKf,kBALe,CAAjB;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEV,SAAS,CAACW,SAA1B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEX,SAAS,CAACY,oBAA1B;AAAA,gBACGL,SAAS,CAACM,GAAV,CAAc,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACpC,4BACE,QAAC,IAAD;AAEE,UAAA,MAAM,EAAEV,UAAU,IAAIS,UAAd,GAA2B,IAA3B,GAAkC,KAF5C;AAGE,UAAA,UAAU,EAAEA,UAHd;AAIE,UAAA,UAAU,EAAEE,QAAQ,CAACV,IAAD,CAAR,KAAmBQ,UAAnB,GAAgC,IAAhC,GAAuC,KAJrD;AAKE,UAAA,WAAW,EAAEA,UAAU,IAAI,CAAd,GAAkB,IAAlB,GAAyB,KALxC;AAME,UAAA,QAAQ,EAAEJ,QAAQ,CAACK,KAAD;AANpB,WACOA,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAEf,SAAS,CAACiB,kBAA1B;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEZ;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD","sourcesContent":["import stepStyle from './../../styles/StepBar.module.css';\nimport Step from './step';\nimport StepNames from './stepNames';\nexport default function StepBar(props) {\n  const { activeStep, size } = props;\n  let stepArray = [];\n  for (let i = 1; i <= size; i++) {\n    stepArray.push(i);\n  }\n  const stepText = [\n    'Pick a Vehicle',\n    'Pick a Day & Time',\n    // 'Pick Location',\n    'The Basics',\n    'Proof of License',\n  ];\n\n  return (\n    <div className={stepStyle.container}>\n      <div className={stepStyle.stepNumbersContainer}>\n        {stepArray.map((stepNumber, index) => {\n          return (\n            <Step\n              key={index}\n              active={activeStep == stepNumber ? true : false}\n              stepNumber={stepNumber}\n              isLastStep={parseInt(size) === stepNumber ? true : false}\n              isFirstStep={stepNumber == 1 ? true : false}\n              stepText={stepText[index]}\n            />\n          );\n        })}\n      </div>\n      <div className={stepStyle.stepNamesContainer}>\n        <StepNames activeStep={activeStep} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}